
Mountain((120, 3); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((198, 4); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((216, 517); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((225, 423); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((127, 731); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((199, 616); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((76, 673); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((199, 719); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((220, 814); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((261, 197); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((269, 1); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((403, 22); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((261, 97); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((332, 20); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((241, 307); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((479, 18); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Mountain((549, 18); 69.99999999999997; 93.33333333333329; [112, 112, 112, 255]; True; [255, 255, 255, 255])
Tree((589, 43); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((512, 677); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((581, 742); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((532, 703); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((552, 723); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((602, 754); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((714, 86); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((796, 53); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((731, 51); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((771, 155); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((739, 98); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((754, 53); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((758, 116); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((648, 71); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((679, 79); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((613, 65); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((792, 352); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((777, 201); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((785, 250); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((788, 297); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((794, 496); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((796, 541); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((792, 448); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((792, 404); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((798, 606); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((678, 793); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((628, 767); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((654, 780); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((794, 753); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((798, 709); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((798, 659); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((738, 833); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((788, 855); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((765, 852); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((790, 805); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((711, 816); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((833, 51); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((877, 49); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((923, 47); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((991, 47); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((947, 47); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((1027, 43); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((1053, 39); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((1075, 31); 23.33333333333332; 46.66666666666664; [30, 85, 25, 255]; [95, 60, 0, 255]; 2)
Tree((1198, 793); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1125, 709); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1149, 737); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1174, 763); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1220, 34); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1409, 24); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1293, 114); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1254, 30); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1372, 28); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1332, 29); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1317, 153); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1340, 187); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1270, 84); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1294, 28); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1363, 220); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1406, 305); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1387, 261); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1260, 826); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1228, 814); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1410, 834); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1375, 839); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1299, 836); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1336, 839); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1552, 23); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1443, 27); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1589, 26); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1481, 24); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1517, 22); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1449, 394); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1425, 348); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1504, 566); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1467, 437); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1486, 480); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1506, 523); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1516, 661); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1497, 766); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1511, 715); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1511, 618); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1444, 824); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1474, 800); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)
Tree((1623, 29); 34.999999999999986; 46.66666666666664; [45, 112, 3, 255]; [112, 52, 3, 255]; 1)